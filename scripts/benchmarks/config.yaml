# To introduce a new env var change both run-tests.sh and docker-compose.yaml
# These variables are ALWAYS required:
# * tests.name
# * tests.stats_collection_interval
# * tests.duration_seconds
#
# Additional memory configuration:
# BEWARE: v8_flags.max_heap_size > 0 implies v8_flags.max_semi_space_size == 0 || v8_flags.max_old_space_size == 0
# * UT_MAX_SEMI_SPACE_SIZE - Sets Node.js --max-semi-space-size flag
# * UT_MAX_OLD_SPACE_SIZE - Sets Node.js --max-old-space-size flag
# * UT_MAX_HEAP_SIZE - Sets Node.js --max-heap-size flag
#
# Profiling configuration:
# * UT_PROF - Enables Node.js built-in profiling with --prof flag, value is used for creating the profiles folder
# * UT_CPU_PROF - Enables Node.js built-in CPU profiling with --cpu-prof flag, value is used for creating the profiles folder
# * UT_PERF - Enables CPU profiling with perf, value is used for creating the profiles folder
# * UT_TRACE_SYNC_IO - Enabled Node.js built-in detector for synchronous code, value is used for creating the profiles folder
rl_image: fracasula/rudder-load:latest
stats_collection_interval: 10
duration_seconds: 120
tests:
#  - name: test-classic
#    UT_NUM_PROCS: 5
#    UT_POOLING: false
#    UT_IMAGE: fracasula/ut-custom:satish
  - name: test-new
    UT_NUM_PROCS: 5
    UT_IMAGE: fracasula/ut-custom-new:latest
#  - name: test-classic-semi512
#    UT_NUM_PROCS: 5
#    UT_POOLING: false
#    UT_MAX_SEMI_SPACE_SIZE: 512
#    UT_MAX_HEAP_SIZE: 5120
#  - name: test-piscina
#    UT_NUM_PROCS: 5
#    UT_MAX_THREADS: 8
#    UT_MIN_THREADS: 2
#    UT_CPU_PROF: piscina
#    UT_TRACE_SYNC_IO: piscina
#    UT_PERF: piscina
#  - name: test-piscina-semi512
#    UT_NUM_PROCS: 5
#    UT_MAX_THREADS: 8
#    UT_MIN_THREADS: 2
#    UT_MAX_SEMI_SPACE_SIZE: 512
#    UT_MAX_HEAP_SIZE: 5120
#    UT_PROF: piscina-semi512
#    ---
#    RL_BATCH_SIZES: 30
